@model X_TEC.TEColones.Models.StudentModels.CreateUser
@{
    ViewBag.Title = "Crear Cuenta | TEColones";
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" type="text/css">
    <link rel="stylesheet" href="~/Content/Recursos/theme.css">

    <title>@ViewBag.Title</title>
</head>
<body>

    <h3> </h3>
    <div class="form-horizontal" style="text-align:center">
        <h4>Crear Nueva Cuenta | TEColones</h4>
        <hr />
    </div>
    <h2 style="color:darkorange">@ViewBag.Message</h2>


    <div class="py-5">
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryval")


        @using (Html.BeginForm("SignUp", "CreateAccount", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <form id="c_form-h" class="">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Identification, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.University, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.University, new { htmlAttributes = new { @class = "form-control", placeholder = "XTEC", disabled = "" } })
                                    @Html.ValidationMessageFor(model => model.University, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Headquarter, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Headquarter, new { htmlAttributes = new { @class = "form-control"} })
                                    @Html.ValidationMessageFor(model => model.Headquarter, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PasswordVerify, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PasswordVerify, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PasswordVerify, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Skills, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Skills, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Skills, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <input type="file" name="PhotoFile" id="PhotoFile" accept=".png, .jpg, .jpeg, .gif" onchange="ShowPreview(this)" />
                                    <img id="impPrev" class="img-fluid d-block rounded-circle" src="" alt="load_image" width="130" height="130">
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-4"> </div>
                                <div class="col-md-4">
                                    <div class="form-group row justify-content-center">

                                        <p><input class="form-control-sm" required id="" type="checkbox" name="isCheck"> <u data-toggle="modal" data-target="#terms" onclick="this.showModal()"> Terminos y Condiciones </u> </p>
                                        @Html.ValidationMessage("isCheck", "Acepte Terminos y Condiciones", new { @class = "text-danger" })

                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Crear usuario" class="btn btn-secondary" />
                                            <button id="btnCancelSignUp" onclick="location.href='@Url.Action("LogIn", "LogIn")'" type="button" class="btn btn-light">Cancelar</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-4"></div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="modal" id="terms" >
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="needs-validation" novalidate>
                    <div class="modal-header">
                        <h5 class="modal-title text-center" style="font-weight:bold">Terminos y Condiciones</h5>
                    </div>
                    <div class="modal-body">
                        <p>Su informacion sera compartida, lo hace Facebook, Google, Microsoft, Apple, etc. 
                        Por que no nosotros? Bueno no, pero aqui van los terminos de XTEC</p>
                        
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary rounded-0" data-dismiss="modal">Cerrar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    
    <script src="https://code.jquery.com/jquery-3.1.1.min.js">
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js">
    </script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js">
    </script>

    <script type="text/javascript">

        function showModal() {
            $('#terms').modal('show');
        }

        function ShowPreview(input) {
            if (input.files && input.files[0]) {
                var ImageDir = new FileReader();
                ImageDir.onload = function (e) {
                    $('#impPrev').attr('src', e.target.result);
                }
                ImageDir.readAsDataURL(input.files[0]);
            }
        }
    </script>


</body>
</html>
